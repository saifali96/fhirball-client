// Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `
  type AggregateAttribute {
    count: Int!
  }

  type AggregateCredential {
    count: Int!
  }

  type AggregateInputColumn {
    count: Int!
  }

  type AggregateJoin {
    count: Int!
  }

  type AggregateResource {
    count: Int!
  }

  type AggregateSource {
    count: Int!
  }

  type AggregateUser {
    count: Int!
  }

  type Attribute {
    id: ID!
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: Resource
    attributes(
      where: AttributeWhereInput
      orderBy: AttributeOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Attribute!]
    attribute: Attribute
    inputColumns(
      where: InputColumnWhereInput
      orderBy: InputColumnOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [InputColumn!]
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type AttributeConnection {
    pageInfo: PageInfo!
    edges: [AttributeEdge]!
    aggregate: AggregateAttribute!
  }

  input AttributeCreateInput {
    id: ID
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceCreateOneWithoutAttributesInput
    attributes: AttributeCreateManyWithoutAttributeInput
    attribute: AttributeCreateOneWithoutAttributesInput
    inputColumns: InputColumnCreateManyWithoutAttributeInput
  }

  input AttributeCreateManyWithoutAttributeInput {
    create: [AttributeCreateWithoutAttributeInput!]
    connect: [AttributeWhereUniqueInput!]
  }

  input AttributeCreateManyWithoutResourceInput {
    create: [AttributeCreateWithoutResourceInput!]
    connect: [AttributeWhereUniqueInput!]
  }

  input AttributeCreateOneWithoutAttributesInput {
    create: AttributeCreateWithoutAttributesInput
    connect: AttributeWhereUniqueInput
  }

  input AttributeCreateOneWithoutInputColumnsInput {
    create: AttributeCreateWithoutInputColumnsInput
    connect: AttributeWhereUniqueInput
  }

  input AttributeCreateWithoutAttributeInput {
    id: ID
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceCreateOneWithoutAttributesInput
    attributes: AttributeCreateManyWithoutAttributeInput
    inputColumns: InputColumnCreateManyWithoutAttributeInput
  }

  input AttributeCreateWithoutAttributesInput {
    id: ID
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceCreateOneWithoutAttributesInput
    attribute: AttributeCreateOneWithoutAttributesInput
    inputColumns: InputColumnCreateManyWithoutAttributeInput
  }

  input AttributeCreateWithoutInputColumnsInput {
    id: ID
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceCreateOneWithoutAttributesInput
    attributes: AttributeCreateManyWithoutAttributeInput
    attribute: AttributeCreateOneWithoutAttributesInput
  }

  input AttributeCreateWithoutResourceInput {
    id: ID
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    attributes: AttributeCreateManyWithoutAttributeInput
    attribute: AttributeCreateOneWithoutAttributesInput
    inputColumns: InputColumnCreateManyWithoutAttributeInput
  }

  type AttributeEdge {
    node: Attribute!
    cursor: String!
  }

  enum AttributeOrderByInput {
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    mergingScript_ASC
    mergingScript_DESC
    isProfile_ASC
    isProfile_DESC
    type_ASC
    type_DESC
    comment_ASC
    comment_DESC
    depth_ASC
    depth_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type AttributePreviousValues {
    id: ID!
    name: String!
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  input AttributeScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    mergingScript: String
    mergingScript_not: String
    mergingScript_in: [String!]
    mergingScript_not_in: [String!]
    mergingScript_lt: String
    mergingScript_lte: String
    mergingScript_gt: String
    mergingScript_gte: String
    mergingScript_contains: String
    mergingScript_not_contains: String
    mergingScript_starts_with: String
    mergingScript_not_starts_with: String
    mergingScript_ends_with: String
    mergingScript_not_ends_with: String
    isProfile: Boolean
    isProfile_not: Boolean
    type: String
    type_not: String
    type_in: [String!]
    type_not_in: [String!]
    type_lt: String
    type_lte: String
    type_gt: String
    type_gte: String
    type_contains: String
    type_not_contains: String
    type_starts_with: String
    type_not_starts_with: String
    type_ends_with: String
    type_not_ends_with: String
    comment: String
    comment_not: String
    comment_in: [String!]
    comment_not_in: [String!]
    comment_lt: String
    comment_lte: String
    comment_gt: String
    comment_gte: String
    comment_contains: String
    comment_not_contains: String
    comment_starts_with: String
    comment_not_starts_with: String
    comment_ends_with: String
    comment_not_ends_with: String
    depth: Int
    depth_not: Int
    depth_in: [Int!]
    depth_not_in: [Int!]
    depth_lt: Int
    depth_lte: Int
    depth_gt: Int
    depth_gte: Int
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [AttributeScalarWhereInput!]
    OR: [AttributeScalarWhereInput!]
    NOT: [AttributeScalarWhereInput!]
  }

  type AttributeSubscriptionPayload {
    mutation: MutationType!
    node: Attribute
    updatedFields: [String!]
    previousValues: AttributePreviousValues
  }

  input AttributeSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: AttributeWhereInput
    AND: [AttributeSubscriptionWhereInput!]
    OR: [AttributeSubscriptionWhereInput!]
    NOT: [AttributeSubscriptionWhereInput!]
  }

  input AttributeUpdateInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceUpdateOneWithoutAttributesInput
    attributes: AttributeUpdateManyWithoutAttributeInput
    attribute: AttributeUpdateOneWithoutAttributesInput
    inputColumns: InputColumnUpdateManyWithoutAttributeInput
  }

  input AttributeUpdateManyDataInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
  }

  input AttributeUpdateManyMutationInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
  }

  input AttributeUpdateManyWithoutAttributeInput {
    create: [AttributeCreateWithoutAttributeInput!]
    delete: [AttributeWhereUniqueInput!]
    connect: [AttributeWhereUniqueInput!]
    set: [AttributeWhereUniqueInput!]
    disconnect: [AttributeWhereUniqueInput!]
    update: [AttributeUpdateWithWhereUniqueWithoutAttributeInput!]
    upsert: [AttributeUpsertWithWhereUniqueWithoutAttributeInput!]
    deleteMany: [AttributeScalarWhereInput!]
    updateMany: [AttributeUpdateManyWithWhereNestedInput!]
  }

  input AttributeUpdateManyWithoutResourceInput {
    create: [AttributeCreateWithoutResourceInput!]
    delete: [AttributeWhereUniqueInput!]
    connect: [AttributeWhereUniqueInput!]
    set: [AttributeWhereUniqueInput!]
    disconnect: [AttributeWhereUniqueInput!]
    update: [AttributeUpdateWithWhereUniqueWithoutResourceInput!]
    upsert: [AttributeUpsertWithWhereUniqueWithoutResourceInput!]
    deleteMany: [AttributeScalarWhereInput!]
    updateMany: [AttributeUpdateManyWithWhereNestedInput!]
  }

  input AttributeUpdateManyWithWhereNestedInput {
    where: AttributeScalarWhereInput!
    data: AttributeUpdateManyDataInput!
  }

  input AttributeUpdateOneRequiredWithoutInputColumnsInput {
    create: AttributeCreateWithoutInputColumnsInput
    update: AttributeUpdateWithoutInputColumnsDataInput
    upsert: AttributeUpsertWithoutInputColumnsInput
    connect: AttributeWhereUniqueInput
  }

  input AttributeUpdateOneWithoutAttributesInput {
    create: AttributeCreateWithoutAttributesInput
    update: AttributeUpdateWithoutAttributesDataInput
    upsert: AttributeUpsertWithoutAttributesInput
    delete: Boolean
    disconnect: Boolean
    connect: AttributeWhereUniqueInput
  }

  input AttributeUpdateWithoutAttributeDataInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceUpdateOneWithoutAttributesInput
    attributes: AttributeUpdateManyWithoutAttributeInput
    inputColumns: InputColumnUpdateManyWithoutAttributeInput
  }

  input AttributeUpdateWithoutAttributesDataInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceUpdateOneWithoutAttributesInput
    attribute: AttributeUpdateOneWithoutAttributesInput
    inputColumns: InputColumnUpdateManyWithoutAttributeInput
  }

  input AttributeUpdateWithoutInputColumnsDataInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    resource: ResourceUpdateOneWithoutAttributesInput
    attributes: AttributeUpdateManyWithoutAttributeInput
    attribute: AttributeUpdateOneWithoutAttributesInput
  }

  input AttributeUpdateWithoutResourceDataInput {
    name: String
    mergingScript: String
    isProfile: Boolean
    type: String
    comment: String
    depth: Int
    attributes: AttributeUpdateManyWithoutAttributeInput
    attribute: AttributeUpdateOneWithoutAttributesInput
    inputColumns: InputColumnUpdateManyWithoutAttributeInput
  }

  input AttributeUpdateWithWhereUniqueWithoutAttributeInput {
    where: AttributeWhereUniqueInput!
    data: AttributeUpdateWithoutAttributeDataInput!
  }

  input AttributeUpdateWithWhereUniqueWithoutResourceInput {
    where: AttributeWhereUniqueInput!
    data: AttributeUpdateWithoutResourceDataInput!
  }

  input AttributeUpsertWithoutAttributesInput {
    update: AttributeUpdateWithoutAttributesDataInput!
    create: AttributeCreateWithoutAttributesInput!
  }

  input AttributeUpsertWithoutInputColumnsInput {
    update: AttributeUpdateWithoutInputColumnsDataInput!
    create: AttributeCreateWithoutInputColumnsInput!
  }

  input AttributeUpsertWithWhereUniqueWithoutAttributeInput {
    where: AttributeWhereUniqueInput!
    update: AttributeUpdateWithoutAttributeDataInput!
    create: AttributeCreateWithoutAttributeInput!
  }

  input AttributeUpsertWithWhereUniqueWithoutResourceInput {
    where: AttributeWhereUniqueInput!
    update: AttributeUpdateWithoutResourceDataInput!
    create: AttributeCreateWithoutResourceInput!
  }

  input AttributeWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    mergingScript: String
    mergingScript_not: String
    mergingScript_in: [String!]
    mergingScript_not_in: [String!]
    mergingScript_lt: String
    mergingScript_lte: String
    mergingScript_gt: String
    mergingScript_gte: String
    mergingScript_contains: String
    mergingScript_not_contains: String
    mergingScript_starts_with: String
    mergingScript_not_starts_with: String
    mergingScript_ends_with: String
    mergingScript_not_ends_with: String
    isProfile: Boolean
    isProfile_not: Boolean
    type: String
    type_not: String
    type_in: [String!]
    type_not_in: [String!]
    type_lt: String
    type_lte: String
    type_gt: String
    type_gte: String
    type_contains: String
    type_not_contains: String
    type_starts_with: String
    type_not_starts_with: String
    type_ends_with: String
    type_not_ends_with: String
    comment: String
    comment_not: String
    comment_in: [String!]
    comment_not_in: [String!]
    comment_lt: String
    comment_lte: String
    comment_gt: String
    comment_gte: String
    comment_contains: String
    comment_not_contains: String
    comment_starts_with: String
    comment_not_starts_with: String
    comment_ends_with: String
    comment_not_ends_with: String
    depth: Int
    depth_not: Int
    depth_in: [Int!]
    depth_not_in: [Int!]
    depth_lt: Int
    depth_lte: Int
    depth_gt: Int
    depth_gte: Int
    resource: ResourceWhereInput
    attributes_every: AttributeWhereInput
    attributes_some: AttributeWhereInput
    attributes_none: AttributeWhereInput
    attribute: AttributeWhereInput
    inputColumns_every: InputColumnWhereInput
    inputColumns_some: InputColumnWhereInput
    inputColumns_none: InputColumnWhereInput
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [AttributeWhereInput!]
    OR: [AttributeWhereInput!]
    NOT: [AttributeWhereInput!]
  }

  input AttributeWhereUniqueInput {
    id: ID
  }

  type BatchPayload {
    count: Long!
  }

  type Credential {
    id: ID!
    host: String!
    port: String!
    database: String!
    login: String!
    password: String
    type: DatabaseType!
    source: Source!
  }

  type CredentialConnection {
    pageInfo: PageInfo!
    edges: [CredentialEdge]!
    aggregate: AggregateCredential!
  }

  input CredentialCreateInput {
    id: ID
    host: String!
    port: String!
    database: String!
    login: String!
    password: String
    type: DatabaseType!
    source: SourceCreateOneWithoutCredentialInput!
  }

  input CredentialCreateManyInput {
    create: [CredentialCreateInput!]
    connect: [CredentialWhereUniqueInput!]
  }

  input CredentialCreateOneWithoutSourceInput {
    create: CredentialCreateWithoutSourceInput
    connect: CredentialWhereUniqueInput
  }

  input CredentialCreateWithoutSourceInput {
    id: ID
    host: String!
    port: String!
    database: String!
    login: String!
    password: String
    type: DatabaseType!
  }

  type CredentialEdge {
    node: Credential!
    cursor: String!
  }

  enum CredentialOrderByInput {
    id_ASC
    id_DESC
    host_ASC
    host_DESC
    port_ASC
    port_DESC
    database_ASC
    database_DESC
    login_ASC
    login_DESC
    password_ASC
    password_DESC
    type_ASC
    type_DESC
  }

  type CredentialPreviousValues {
    id: ID!
    host: String!
    port: String!
    database: String!
    login: String!
    password: String
    type: DatabaseType!
  }

  input CredentialScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    host: String
    host_not: String
    host_in: [String!]
    host_not_in: [String!]
    host_lt: String
    host_lte: String
    host_gt: String
    host_gte: String
    host_contains: String
    host_not_contains: String
    host_starts_with: String
    host_not_starts_with: String
    host_ends_with: String
    host_not_ends_with: String
    port: String
    port_not: String
    port_in: [String!]
    port_not_in: [String!]
    port_lt: String
    port_lte: String
    port_gt: String
    port_gte: String
    port_contains: String
    port_not_contains: String
    port_starts_with: String
    port_not_starts_with: String
    port_ends_with: String
    port_not_ends_with: String
    database: String
    database_not: String
    database_in: [String!]
    database_not_in: [String!]
    database_lt: String
    database_lte: String
    database_gt: String
    database_gte: String
    database_contains: String
    database_not_contains: String
    database_starts_with: String
    database_not_starts_with: String
    database_ends_with: String
    database_not_ends_with: String
    login: String
    login_not: String
    login_in: [String!]
    login_not_in: [String!]
    login_lt: String
    login_lte: String
    login_gt: String
    login_gte: String
    login_contains: String
    login_not_contains: String
    login_starts_with: String
    login_not_starts_with: String
    login_ends_with: String
    login_not_ends_with: String
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    type: DatabaseType
    type_not: DatabaseType
    type_in: [DatabaseType!]
    type_not_in: [DatabaseType!]
    AND: [CredentialScalarWhereInput!]
    OR: [CredentialScalarWhereInput!]
    NOT: [CredentialScalarWhereInput!]
  }

  type CredentialSubscriptionPayload {
    mutation: MutationType!
    node: Credential
    updatedFields: [String!]
    previousValues: CredentialPreviousValues
  }

  input CredentialSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: CredentialWhereInput
    AND: [CredentialSubscriptionWhereInput!]
    OR: [CredentialSubscriptionWhereInput!]
    NOT: [CredentialSubscriptionWhereInput!]
  }

  input CredentialUpdateDataInput {
    host: String
    port: String
    database: String
    login: String
    password: String
    type: DatabaseType
    source: SourceUpdateOneRequiredWithoutCredentialInput
  }

  input CredentialUpdateInput {
    host: String
    port: String
    database: String
    login: String
    password: String
    type: DatabaseType
    source: SourceUpdateOneRequiredWithoutCredentialInput
  }

  input CredentialUpdateManyDataInput {
    host: String
    port: String
    database: String
    login: String
    password: String
    type: DatabaseType
  }

  input CredentialUpdateManyInput {
    create: [CredentialCreateInput!]
    update: [CredentialUpdateWithWhereUniqueNestedInput!]
    upsert: [CredentialUpsertWithWhereUniqueNestedInput!]
    delete: [CredentialWhereUniqueInput!]
    connect: [CredentialWhereUniqueInput!]
    set: [CredentialWhereUniqueInput!]
    disconnect: [CredentialWhereUniqueInput!]
    deleteMany: [CredentialScalarWhereInput!]
    updateMany: [CredentialUpdateManyWithWhereNestedInput!]
  }

  input CredentialUpdateManyMutationInput {
    host: String
    port: String
    database: String
    login: String
    password: String
    type: DatabaseType
  }

  input CredentialUpdateManyWithWhereNestedInput {
    where: CredentialScalarWhereInput!
    data: CredentialUpdateManyDataInput!
  }

  input CredentialUpdateOneWithoutSourceInput {
    create: CredentialCreateWithoutSourceInput
    update: CredentialUpdateWithoutSourceDataInput
    upsert: CredentialUpsertWithoutSourceInput
    delete: Boolean
    disconnect: Boolean
    connect: CredentialWhereUniqueInput
  }

  input CredentialUpdateWithoutSourceDataInput {
    host: String
    port: String
    database: String
    login: String
    password: String
    type: DatabaseType
  }

  input CredentialUpdateWithWhereUniqueNestedInput {
    where: CredentialWhereUniqueInput!
    data: CredentialUpdateDataInput!
  }

  input CredentialUpsertWithoutSourceInput {
    update: CredentialUpdateWithoutSourceDataInput!
    create: CredentialCreateWithoutSourceInput!
  }

  input CredentialUpsertWithWhereUniqueNestedInput {
    where: CredentialWhereUniqueInput!
    update: CredentialUpdateDataInput!
    create: CredentialCreateInput!
  }

  input CredentialWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    host: String
    host_not: String
    host_in: [String!]
    host_not_in: [String!]
    host_lt: String
    host_lte: String
    host_gt: String
    host_gte: String
    host_contains: String
    host_not_contains: String
    host_starts_with: String
    host_not_starts_with: String
    host_ends_with: String
    host_not_ends_with: String
    port: String
    port_not: String
    port_in: [String!]
    port_not_in: [String!]
    port_lt: String
    port_lte: String
    port_gt: String
    port_gte: String
    port_contains: String
    port_not_contains: String
    port_starts_with: String
    port_not_starts_with: String
    port_ends_with: String
    port_not_ends_with: String
    database: String
    database_not: String
    database_in: [String!]
    database_not_in: [String!]
    database_lt: String
    database_lte: String
    database_gt: String
    database_gte: String
    database_contains: String
    database_not_contains: String
    database_starts_with: String
    database_not_starts_with: String
    database_ends_with: String
    database_not_ends_with: String
    login: String
    login_not: String
    login_in: [String!]
    login_not_in: [String!]
    login_lt: String
    login_lte: String
    login_gt: String
    login_gte: String
    login_contains: String
    login_not_contains: String
    login_starts_with: String
    login_not_starts_with: String
    login_ends_with: String
    login_not_ends_with: String
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    type: DatabaseType
    type_not: DatabaseType
    type_in: [DatabaseType!]
    type_not_in: [DatabaseType!]
    source: SourceWhereInput
    AND: [CredentialWhereInput!]
    OR: [CredentialWhereInput!]
    NOT: [CredentialWhereInput!]
  }

  input CredentialWhereUniqueInput {
    id: ID
  }

  enum DatabaseType {
    POSTGRES
  }

  scalar DateTime

  type InputColumn {
    id: ID!
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    joins(
      where: JoinWhereInput
      orderBy: JoinOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Join!]
    attribute: Attribute!
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type InputColumnConnection {
    pageInfo: PageInfo!
    edges: [InputColumnEdge]!
    aggregate: AggregateInputColumn!
  }

  input InputColumnCreateInput {
    id: ID
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    joins: JoinCreateManyWithoutInputColumnInput
    attribute: AttributeCreateOneWithoutInputColumnsInput!
  }

  input InputColumnCreateManyWithoutAttributeInput {
    create: [InputColumnCreateWithoutAttributeInput!]
    connect: [InputColumnWhereUniqueInput!]
  }

  input InputColumnCreateOneWithoutJoinsInput {
    create: InputColumnCreateWithoutJoinsInput
    connect: InputColumnWhereUniqueInput
  }

  input InputColumnCreateWithoutAttributeInput {
    id: ID
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    joins: JoinCreateManyWithoutInputColumnInput
  }

  input InputColumnCreateWithoutJoinsInput {
    id: ID
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    attribute: AttributeCreateOneWithoutInputColumnsInput!
  }

  type InputColumnEdge {
    node: InputColumn!
    cursor: String!
  }

  enum InputColumnOrderByInput {
    id_ASC
    id_DESC
    owner_ASC
    owner_DESC
    table_ASC
    table_DESC
    column_ASC
    column_DESC
    script_ASC
    script_DESC
    staticValue_ASC
    staticValue_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type InputColumnPreviousValues {
    id: ID!
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  input InputColumnScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    owner: String
    owner_not: String
    owner_in: [String!]
    owner_not_in: [String!]
    owner_lt: String
    owner_lte: String
    owner_gt: String
    owner_gte: String
    owner_contains: String
    owner_not_contains: String
    owner_starts_with: String
    owner_not_starts_with: String
    owner_ends_with: String
    owner_not_ends_with: String
    table: String
    table_not: String
    table_in: [String!]
    table_not_in: [String!]
    table_lt: String
    table_lte: String
    table_gt: String
    table_gte: String
    table_contains: String
    table_not_contains: String
    table_starts_with: String
    table_not_starts_with: String
    table_ends_with: String
    table_not_ends_with: String
    column: String
    column_not: String
    column_in: [String!]
    column_not_in: [String!]
    column_lt: String
    column_lte: String
    column_gt: String
    column_gte: String
    column_contains: String
    column_not_contains: String
    column_starts_with: String
    column_not_starts_with: String
    column_ends_with: String
    column_not_ends_with: String
    script: String
    script_not: String
    script_in: [String!]
    script_not_in: [String!]
    script_lt: String
    script_lte: String
    script_gt: String
    script_gte: String
    script_contains: String
    script_not_contains: String
    script_starts_with: String
    script_not_starts_with: String
    script_ends_with: String
    script_not_ends_with: String
    staticValue: String
    staticValue_not: String
    staticValue_in: [String!]
    staticValue_not_in: [String!]
    staticValue_lt: String
    staticValue_lte: String
    staticValue_gt: String
    staticValue_gte: String
    staticValue_contains: String
    staticValue_not_contains: String
    staticValue_starts_with: String
    staticValue_not_starts_with: String
    staticValue_ends_with: String
    staticValue_not_ends_with: String
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [InputColumnScalarWhereInput!]
    OR: [InputColumnScalarWhereInput!]
    NOT: [InputColumnScalarWhereInput!]
  }

  type InputColumnSubscriptionPayload {
    mutation: MutationType!
    node: InputColumn
    updatedFields: [String!]
    previousValues: InputColumnPreviousValues
  }

  input InputColumnSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: InputColumnWhereInput
    AND: [InputColumnSubscriptionWhereInput!]
    OR: [InputColumnSubscriptionWhereInput!]
    NOT: [InputColumnSubscriptionWhereInput!]
  }

  input InputColumnUpdateInput {
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    joins: JoinUpdateManyWithoutInputColumnInput
    attribute: AttributeUpdateOneRequiredWithoutInputColumnsInput
  }

  input InputColumnUpdateManyDataInput {
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
  }

  input InputColumnUpdateManyMutationInput {
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
  }

  input InputColumnUpdateManyWithoutAttributeInput {
    create: [InputColumnCreateWithoutAttributeInput!]
    delete: [InputColumnWhereUniqueInput!]
    connect: [InputColumnWhereUniqueInput!]
    set: [InputColumnWhereUniqueInput!]
    disconnect: [InputColumnWhereUniqueInput!]
    update: [InputColumnUpdateWithWhereUniqueWithoutAttributeInput!]
    upsert: [InputColumnUpsertWithWhereUniqueWithoutAttributeInput!]
    deleteMany: [InputColumnScalarWhereInput!]
    updateMany: [InputColumnUpdateManyWithWhereNestedInput!]
  }

  input InputColumnUpdateManyWithWhereNestedInput {
    where: InputColumnScalarWhereInput!
    data: InputColumnUpdateManyDataInput!
  }

  input InputColumnUpdateOneRequiredWithoutJoinsInput {
    create: InputColumnCreateWithoutJoinsInput
    update: InputColumnUpdateWithoutJoinsDataInput
    upsert: InputColumnUpsertWithoutJoinsInput
    connect: InputColumnWhereUniqueInput
  }

  input InputColumnUpdateWithoutAttributeDataInput {
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    joins: JoinUpdateManyWithoutInputColumnInput
  }

  input InputColumnUpdateWithoutJoinsDataInput {
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    attribute: AttributeUpdateOneRequiredWithoutInputColumnsInput
  }

  input InputColumnUpdateWithWhereUniqueWithoutAttributeInput {
    where: InputColumnWhereUniqueInput!
    data: InputColumnUpdateWithoutAttributeDataInput!
  }

  input InputColumnUpsertWithoutJoinsInput {
    update: InputColumnUpdateWithoutJoinsDataInput!
    create: InputColumnCreateWithoutJoinsInput!
  }

  input InputColumnUpsertWithWhereUniqueWithoutAttributeInput {
    where: InputColumnWhereUniqueInput!
    update: InputColumnUpdateWithoutAttributeDataInput!
    create: InputColumnCreateWithoutAttributeInput!
  }

  input InputColumnWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    owner: String
    owner_not: String
    owner_in: [String!]
    owner_not_in: [String!]
    owner_lt: String
    owner_lte: String
    owner_gt: String
    owner_gte: String
    owner_contains: String
    owner_not_contains: String
    owner_starts_with: String
    owner_not_starts_with: String
    owner_ends_with: String
    owner_not_ends_with: String
    table: String
    table_not: String
    table_in: [String!]
    table_not_in: [String!]
    table_lt: String
    table_lte: String
    table_gt: String
    table_gte: String
    table_contains: String
    table_not_contains: String
    table_starts_with: String
    table_not_starts_with: String
    table_ends_with: String
    table_not_ends_with: String
    column: String
    column_not: String
    column_in: [String!]
    column_not_in: [String!]
    column_lt: String
    column_lte: String
    column_gt: String
    column_gte: String
    column_contains: String
    column_not_contains: String
    column_starts_with: String
    column_not_starts_with: String
    column_ends_with: String
    column_not_ends_with: String
    script: String
    script_not: String
    script_in: [String!]
    script_not_in: [String!]
    script_lt: String
    script_lte: String
    script_gt: String
    script_gte: String
    script_contains: String
    script_not_contains: String
    script_starts_with: String
    script_not_starts_with: String
    script_ends_with: String
    script_not_ends_with: String
    staticValue: String
    staticValue_not: String
    staticValue_in: [String!]
    staticValue_not_in: [String!]
    staticValue_lt: String
    staticValue_lte: String
    staticValue_gt: String
    staticValue_gte: String
    staticValue_contains: String
    staticValue_not_contains: String
    staticValue_starts_with: String
    staticValue_not_starts_with: String
    staticValue_ends_with: String
    staticValue_not_ends_with: String
    joins_every: JoinWhereInput
    joins_some: JoinWhereInput
    joins_none: JoinWhereInput
    attribute: AttributeWhereInput
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [InputColumnWhereInput!]
    OR: [InputColumnWhereInput!]
    NOT: [InputColumnWhereInput!]
  }

  input InputColumnWhereUniqueInput {
    id: ID
  }

  type Join {
    id: ID!
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
    inputColumn: InputColumn!
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type JoinConnection {
    pageInfo: PageInfo!
    edges: [JoinEdge]!
    aggregate: AggregateJoin!
  }

  input JoinCreateInput {
    id: ID
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
    inputColumn: InputColumnCreateOneWithoutJoinsInput!
  }

  input JoinCreateManyWithoutInputColumnInput {
    create: [JoinCreateWithoutInputColumnInput!]
    connect: [JoinWhereUniqueInput!]
  }

  input JoinCreateWithoutInputColumnInput {
    id: ID
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
  }

  type JoinEdge {
    node: Join!
    cursor: String!
  }

  enum JoinOrderByInput {
    id_ASC
    id_DESC
    sourceOwner_ASC
    sourceOwner_DESC
    sourceTable_ASC
    sourceTable_DESC
    sourceColumn_ASC
    sourceColumn_DESC
    targetOwner_ASC
    targetOwner_DESC
    targetTable_ASC
    targetTable_DESC
    targetColumn_ASC
    targetColumn_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type JoinPreviousValues {
    id: ID!
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  input JoinScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    sourceOwner: String
    sourceOwner_not: String
    sourceOwner_in: [String!]
    sourceOwner_not_in: [String!]
    sourceOwner_lt: String
    sourceOwner_lte: String
    sourceOwner_gt: String
    sourceOwner_gte: String
    sourceOwner_contains: String
    sourceOwner_not_contains: String
    sourceOwner_starts_with: String
    sourceOwner_not_starts_with: String
    sourceOwner_ends_with: String
    sourceOwner_not_ends_with: String
    sourceTable: String
    sourceTable_not: String
    sourceTable_in: [String!]
    sourceTable_not_in: [String!]
    sourceTable_lt: String
    sourceTable_lte: String
    sourceTable_gt: String
    sourceTable_gte: String
    sourceTable_contains: String
    sourceTable_not_contains: String
    sourceTable_starts_with: String
    sourceTable_not_starts_with: String
    sourceTable_ends_with: String
    sourceTable_not_ends_with: String
    sourceColumn: String
    sourceColumn_not: String
    sourceColumn_in: [String!]
    sourceColumn_not_in: [String!]
    sourceColumn_lt: String
    sourceColumn_lte: String
    sourceColumn_gt: String
    sourceColumn_gte: String
    sourceColumn_contains: String
    sourceColumn_not_contains: String
    sourceColumn_starts_with: String
    sourceColumn_not_starts_with: String
    sourceColumn_ends_with: String
    sourceColumn_not_ends_with: String
    targetOwner: String
    targetOwner_not: String
    targetOwner_in: [String!]
    targetOwner_not_in: [String!]
    targetOwner_lt: String
    targetOwner_lte: String
    targetOwner_gt: String
    targetOwner_gte: String
    targetOwner_contains: String
    targetOwner_not_contains: String
    targetOwner_starts_with: String
    targetOwner_not_starts_with: String
    targetOwner_ends_with: String
    targetOwner_not_ends_with: String
    targetTable: String
    targetTable_not: String
    targetTable_in: [String!]
    targetTable_not_in: [String!]
    targetTable_lt: String
    targetTable_lte: String
    targetTable_gt: String
    targetTable_gte: String
    targetTable_contains: String
    targetTable_not_contains: String
    targetTable_starts_with: String
    targetTable_not_starts_with: String
    targetTable_ends_with: String
    targetTable_not_ends_with: String
    targetColumn: String
    targetColumn_not: String
    targetColumn_in: [String!]
    targetColumn_not_in: [String!]
    targetColumn_lt: String
    targetColumn_lte: String
    targetColumn_gt: String
    targetColumn_gte: String
    targetColumn_contains: String
    targetColumn_not_contains: String
    targetColumn_starts_with: String
    targetColumn_not_starts_with: String
    targetColumn_ends_with: String
    targetColumn_not_ends_with: String
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [JoinScalarWhereInput!]
    OR: [JoinScalarWhereInput!]
    NOT: [JoinScalarWhereInput!]
  }

  type JoinSubscriptionPayload {
    mutation: MutationType!
    node: Join
    updatedFields: [String!]
    previousValues: JoinPreviousValues
  }

  input JoinSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: JoinWhereInput
    AND: [JoinSubscriptionWhereInput!]
    OR: [JoinSubscriptionWhereInput!]
    NOT: [JoinSubscriptionWhereInput!]
  }

  input JoinUpdateInput {
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
    inputColumn: InputColumnUpdateOneRequiredWithoutJoinsInput
  }

  input JoinUpdateManyDataInput {
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
  }

  input JoinUpdateManyMutationInput {
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
  }

  input JoinUpdateManyWithoutInputColumnInput {
    create: [JoinCreateWithoutInputColumnInput!]
    delete: [JoinWhereUniqueInput!]
    connect: [JoinWhereUniqueInput!]
    set: [JoinWhereUniqueInput!]
    disconnect: [JoinWhereUniqueInput!]
    update: [JoinUpdateWithWhereUniqueWithoutInputColumnInput!]
    upsert: [JoinUpsertWithWhereUniqueWithoutInputColumnInput!]
    deleteMany: [JoinScalarWhereInput!]
    updateMany: [JoinUpdateManyWithWhereNestedInput!]
  }

  input JoinUpdateManyWithWhereNestedInput {
    where: JoinScalarWhereInput!
    data: JoinUpdateManyDataInput!
  }

  input JoinUpdateWithoutInputColumnDataInput {
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
  }

  input JoinUpdateWithWhereUniqueWithoutInputColumnInput {
    where: JoinWhereUniqueInput!
    data: JoinUpdateWithoutInputColumnDataInput!
  }

  input JoinUpsertWithWhereUniqueWithoutInputColumnInput {
    where: JoinWhereUniqueInput!
    update: JoinUpdateWithoutInputColumnDataInput!
    create: JoinCreateWithoutInputColumnInput!
  }

  input JoinWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    sourceOwner: String
    sourceOwner_not: String
    sourceOwner_in: [String!]
    sourceOwner_not_in: [String!]
    sourceOwner_lt: String
    sourceOwner_lte: String
    sourceOwner_gt: String
    sourceOwner_gte: String
    sourceOwner_contains: String
    sourceOwner_not_contains: String
    sourceOwner_starts_with: String
    sourceOwner_not_starts_with: String
    sourceOwner_ends_with: String
    sourceOwner_not_ends_with: String
    sourceTable: String
    sourceTable_not: String
    sourceTable_in: [String!]
    sourceTable_not_in: [String!]
    sourceTable_lt: String
    sourceTable_lte: String
    sourceTable_gt: String
    sourceTable_gte: String
    sourceTable_contains: String
    sourceTable_not_contains: String
    sourceTable_starts_with: String
    sourceTable_not_starts_with: String
    sourceTable_ends_with: String
    sourceTable_not_ends_with: String
    sourceColumn: String
    sourceColumn_not: String
    sourceColumn_in: [String!]
    sourceColumn_not_in: [String!]
    sourceColumn_lt: String
    sourceColumn_lte: String
    sourceColumn_gt: String
    sourceColumn_gte: String
    sourceColumn_contains: String
    sourceColumn_not_contains: String
    sourceColumn_starts_with: String
    sourceColumn_not_starts_with: String
    sourceColumn_ends_with: String
    sourceColumn_not_ends_with: String
    targetOwner: String
    targetOwner_not: String
    targetOwner_in: [String!]
    targetOwner_not_in: [String!]
    targetOwner_lt: String
    targetOwner_lte: String
    targetOwner_gt: String
    targetOwner_gte: String
    targetOwner_contains: String
    targetOwner_not_contains: String
    targetOwner_starts_with: String
    targetOwner_not_starts_with: String
    targetOwner_ends_with: String
    targetOwner_not_ends_with: String
    targetTable: String
    targetTable_not: String
    targetTable_in: [String!]
    targetTable_not_in: [String!]
    targetTable_lt: String
    targetTable_lte: String
    targetTable_gt: String
    targetTable_gte: String
    targetTable_contains: String
    targetTable_not_contains: String
    targetTable_starts_with: String
    targetTable_not_starts_with: String
    targetTable_ends_with: String
    targetTable_not_ends_with: String
    targetColumn: String
    targetColumn_not: String
    targetColumn_in: [String!]
    targetColumn_not_in: [String!]
    targetColumn_lt: String
    targetColumn_lte: String
    targetColumn_gt: String
    targetColumn_gte: String
    targetColumn_contains: String
    targetColumn_not_contains: String
    targetColumn_starts_with: String
    targetColumn_not_starts_with: String
    targetColumn_ends_with: String
    targetColumn_not_ends_with: String
    inputColumn: InputColumnWhereInput
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [JoinWhereInput!]
    OR: [JoinWhereInput!]
    NOT: [JoinWhereInput!]
  }

  input JoinWhereUniqueInput {
    id: ID
  }

  scalar Long

  type Mutation {
    createAttribute(data: AttributeCreateInput!): Attribute!
    updateAttribute(
      data: AttributeUpdateInput!
      where: AttributeWhereUniqueInput!
    ): Attribute
    updateManyAttributes(
      data: AttributeUpdateManyMutationInput!
      where: AttributeWhereInput
    ): BatchPayload!
    upsertAttribute(
      where: AttributeWhereUniqueInput!
      create: AttributeCreateInput!
      update: AttributeUpdateInput!
    ): Attribute!
    deleteAttribute(where: AttributeWhereUniqueInput!): Attribute
    deleteManyAttributes(where: AttributeWhereInput): BatchPayload!
    createCredential(data: CredentialCreateInput!): Credential!
    updateCredential(
      data: CredentialUpdateInput!
      where: CredentialWhereUniqueInput!
    ): Credential
    updateManyCredentials(
      data: CredentialUpdateManyMutationInput!
      where: CredentialWhereInput
    ): BatchPayload!
    upsertCredential(
      where: CredentialWhereUniqueInput!
      create: CredentialCreateInput!
      update: CredentialUpdateInput!
    ): Credential!
    deleteCredential(where: CredentialWhereUniqueInput!): Credential
    deleteManyCredentials(where: CredentialWhereInput): BatchPayload!
    createInputColumn(data: InputColumnCreateInput!): InputColumn!
    updateInputColumn(
      data: InputColumnUpdateInput!
      where: InputColumnWhereUniqueInput!
    ): InputColumn
    updateManyInputColumns(
      data: InputColumnUpdateManyMutationInput!
      where: InputColumnWhereInput
    ): BatchPayload!
    upsertInputColumn(
      where: InputColumnWhereUniqueInput!
      create: InputColumnCreateInput!
      update: InputColumnUpdateInput!
    ): InputColumn!
    deleteInputColumn(where: InputColumnWhereUniqueInput!): InputColumn
    deleteManyInputColumns(where: InputColumnWhereInput): BatchPayload!
    createJoin(data: JoinCreateInput!): Join!
    updateJoin(data: JoinUpdateInput!, where: JoinWhereUniqueInput!): Join
    updateManyJoins(
      data: JoinUpdateManyMutationInput!
      where: JoinWhereInput
    ): BatchPayload!
    upsertJoin(
      where: JoinWhereUniqueInput!
      create: JoinCreateInput!
      update: JoinUpdateInput!
    ): Join!
    deleteJoin(where: JoinWhereUniqueInput!): Join
    deleteManyJoins(where: JoinWhereInput): BatchPayload!
    createResource(data: ResourceCreateInput!): Resource!
    updateResource(
      data: ResourceUpdateInput!
      where: ResourceWhereUniqueInput!
    ): Resource
    updateManyResources(
      data: ResourceUpdateManyMutationInput!
      where: ResourceWhereInput
    ): BatchPayload!
    upsertResource(
      where: ResourceWhereUniqueInput!
      create: ResourceCreateInput!
      update: ResourceUpdateInput!
    ): Resource!
    deleteResource(where: ResourceWhereUniqueInput!): Resource
    deleteManyResources(where: ResourceWhereInput): BatchPayload!
    createSource(data: SourceCreateInput!): Source!
    updateSource(
      data: SourceUpdateInput!
      where: SourceWhereUniqueInput!
    ): Source
    updateManySources(
      data: SourceUpdateManyMutationInput!
      where: SourceWhereInput
    ): BatchPayload!
    upsertSource(
      where: SourceWhereUniqueInput!
      create: SourceCreateInput!
      update: SourceUpdateInput!
    ): Source!
    deleteSource(where: SourceWhereUniqueInput!): Source
    deleteManySources(where: SourceWhereInput): BatchPayload!
    createUser(data: UserCreateInput!): User!
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
    updateManyUsers(
      data: UserUpdateManyMutationInput!
      where: UserWhereInput
    ): BatchPayload!
    upsertUser(
      where: UserWhereUniqueInput!
      create: UserCreateInput!
      update: UserUpdateInput!
    ): User!
    deleteUser(where: UserWhereUniqueInput!): User
    deleteManyUsers(where: UserWhereInput): BatchPayload!
  }

  enum MutationType {
    CREATED
    UPDATED
    DELETED
  }

  interface Node {
    id: ID!
  }

  type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
  }

  type Query {
    attribute(where: AttributeWhereUniqueInput!): Attribute
    attributes(
      where: AttributeWhereInput
      orderBy: AttributeOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Attribute]!
    attributesConnection(
      where: AttributeWhereInput
      orderBy: AttributeOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): AttributeConnection!
    credential(where: CredentialWhereUniqueInput!): Credential
    credentials(
      where: CredentialWhereInput
      orderBy: CredentialOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Credential]!
    credentialsConnection(
      where: CredentialWhereInput
      orderBy: CredentialOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): CredentialConnection!
    inputColumn(where: InputColumnWhereUniqueInput!): InputColumn
    inputColumns(
      where: InputColumnWhereInput
      orderBy: InputColumnOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [InputColumn]!
    inputColumnsConnection(
      where: InputColumnWhereInput
      orderBy: InputColumnOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): InputColumnConnection!
    join(where: JoinWhereUniqueInput!): Join
    joins(
      where: JoinWhereInput
      orderBy: JoinOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Join]!
    joinsConnection(
      where: JoinWhereInput
      orderBy: JoinOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): JoinConnection!
    resource(where: ResourceWhereUniqueInput!): Resource
    resources(
      where: ResourceWhereInput
      orderBy: ResourceOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Resource]!
    resourcesConnection(
      where: ResourceWhereInput
      orderBy: ResourceOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): ResourceConnection!
    source(where: SourceWhereUniqueInput!): Source
    sources(
      where: SourceWhereInput
      orderBy: SourceOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Source]!
    sourcesConnection(
      where: SourceWhereInput
      orderBy: SourceOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): SourceConnection!
    user(where: UserWhereUniqueInput!): User
    users(
      where: UserWhereInput
      orderBy: UserOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [User]!
    usersConnection(
      where: UserWhereInput
      orderBy: UserOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): UserConnection!
    node(id: ID!): Node
  }

  type Resource {
    id: ID!
    label: String
    fhirType: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes(
      where: AttributeWhereInput
      orderBy: AttributeOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Attribute!]
    source: Source!
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type ResourceConnection {
    pageInfo: PageInfo!
    edges: [ResourceEdge]!
    aggregate: AggregateResource!
  }

  input ResourceCreateInput {
    id: ID
    label: String
    fhirType: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes: AttributeCreateManyWithoutResourceInput
    source: SourceCreateOneWithoutResourcesInput!
  }

  input ResourceCreateManyWithoutSourceInput {
    create: [ResourceCreateWithoutSourceInput!]
    connect: [ResourceWhereUniqueInput!]
  }

  input ResourceCreateOneWithoutAttributesInput {
    create: ResourceCreateWithoutAttributesInput
    connect: ResourceWhereUniqueInput
  }

  input ResourceCreateWithoutAttributesInput {
    id: ID
    label: String
    fhirType: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    source: SourceCreateOneWithoutResourcesInput!
  }

  input ResourceCreateWithoutSourceInput {
    id: ID
    label: String
    fhirType: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes: AttributeCreateManyWithoutResourceInput
  }

  type ResourceEdge {
    node: Resource!
    cursor: String!
  }

  enum ResourceOrderByInput {
    id_ASC
    id_DESC
    label_ASC
    label_DESC
    fhirType_ASC
    fhirType_DESC
    primaryKeyOwner_ASC
    primaryKeyOwner_DESC
    primaryKeyTable_ASC
    primaryKeyTable_DESC
    primaryKeyColumn_ASC
    primaryKeyColumn_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type ResourcePreviousValues {
    id: ID!
    label: String
    fhirType: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  input ResourceScalarWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    label: String
    label_not: String
    label_in: [String!]
    label_not_in: [String!]
    label_lt: String
    label_lte: String
    label_gt: String
    label_gte: String
    label_contains: String
    label_not_contains: String
    label_starts_with: String
    label_not_starts_with: String
    label_ends_with: String
    label_not_ends_with: String
    fhirType: String
    fhirType_not: String
    fhirType_in: [String!]
    fhirType_not_in: [String!]
    fhirType_lt: String
    fhirType_lte: String
    fhirType_gt: String
    fhirType_gte: String
    fhirType_contains: String
    fhirType_not_contains: String
    fhirType_starts_with: String
    fhirType_not_starts_with: String
    fhirType_ends_with: String
    fhirType_not_ends_with: String
    primaryKeyOwner: String
    primaryKeyOwner_not: String
    primaryKeyOwner_in: [String!]
    primaryKeyOwner_not_in: [String!]
    primaryKeyOwner_lt: String
    primaryKeyOwner_lte: String
    primaryKeyOwner_gt: String
    primaryKeyOwner_gte: String
    primaryKeyOwner_contains: String
    primaryKeyOwner_not_contains: String
    primaryKeyOwner_starts_with: String
    primaryKeyOwner_not_starts_with: String
    primaryKeyOwner_ends_with: String
    primaryKeyOwner_not_ends_with: String
    primaryKeyTable: String
    primaryKeyTable_not: String
    primaryKeyTable_in: [String!]
    primaryKeyTable_not_in: [String!]
    primaryKeyTable_lt: String
    primaryKeyTable_lte: String
    primaryKeyTable_gt: String
    primaryKeyTable_gte: String
    primaryKeyTable_contains: String
    primaryKeyTable_not_contains: String
    primaryKeyTable_starts_with: String
    primaryKeyTable_not_starts_with: String
    primaryKeyTable_ends_with: String
    primaryKeyTable_not_ends_with: String
    primaryKeyColumn: String
    primaryKeyColumn_not: String
    primaryKeyColumn_in: [String!]
    primaryKeyColumn_not_in: [String!]
    primaryKeyColumn_lt: String
    primaryKeyColumn_lte: String
    primaryKeyColumn_gt: String
    primaryKeyColumn_gte: String
    primaryKeyColumn_contains: String
    primaryKeyColumn_not_contains: String
    primaryKeyColumn_starts_with: String
    primaryKeyColumn_not_starts_with: String
    primaryKeyColumn_ends_with: String
    primaryKeyColumn_not_ends_with: String
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [ResourceScalarWhereInput!]
    OR: [ResourceScalarWhereInput!]
    NOT: [ResourceScalarWhereInput!]
  }

  type ResourceSubscriptionPayload {
    mutation: MutationType!
    node: Resource
    updatedFields: [String!]
    previousValues: ResourcePreviousValues
  }

  input ResourceSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: ResourceWhereInput
    AND: [ResourceSubscriptionWhereInput!]
    OR: [ResourceSubscriptionWhereInput!]
    NOT: [ResourceSubscriptionWhereInput!]
  }

  input ResourceUpdateInput {
    label: String
    fhirType: String
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes: AttributeUpdateManyWithoutResourceInput
    source: SourceUpdateOneRequiredWithoutResourcesInput
  }

  input ResourceUpdateManyDataInput {
    label: String
    fhirType: String
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
  }

  input ResourceUpdateManyMutationInput {
    label: String
    fhirType: String
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
  }

  input ResourceUpdateManyWithoutSourceInput {
    create: [ResourceCreateWithoutSourceInput!]
    delete: [ResourceWhereUniqueInput!]
    connect: [ResourceWhereUniqueInput!]
    set: [ResourceWhereUniqueInput!]
    disconnect: [ResourceWhereUniqueInput!]
    update: [ResourceUpdateWithWhereUniqueWithoutSourceInput!]
    upsert: [ResourceUpsertWithWhereUniqueWithoutSourceInput!]
    deleteMany: [ResourceScalarWhereInput!]
    updateMany: [ResourceUpdateManyWithWhereNestedInput!]
  }

  input ResourceUpdateManyWithWhereNestedInput {
    where: ResourceScalarWhereInput!
    data: ResourceUpdateManyDataInput!
  }

  input ResourceUpdateOneWithoutAttributesInput {
    create: ResourceCreateWithoutAttributesInput
    update: ResourceUpdateWithoutAttributesDataInput
    upsert: ResourceUpsertWithoutAttributesInput
    delete: Boolean
    disconnect: Boolean
    connect: ResourceWhereUniqueInput
  }

  input ResourceUpdateWithoutAttributesDataInput {
    label: String
    fhirType: String
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    source: SourceUpdateOneRequiredWithoutResourcesInput
  }

  input ResourceUpdateWithoutSourceDataInput {
    label: String
    fhirType: String
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes: AttributeUpdateManyWithoutResourceInput
  }

  input ResourceUpdateWithWhereUniqueWithoutSourceInput {
    where: ResourceWhereUniqueInput!
    data: ResourceUpdateWithoutSourceDataInput!
  }

  input ResourceUpsertWithoutAttributesInput {
    update: ResourceUpdateWithoutAttributesDataInput!
    create: ResourceCreateWithoutAttributesInput!
  }

  input ResourceUpsertWithWhereUniqueWithoutSourceInput {
    where: ResourceWhereUniqueInput!
    update: ResourceUpdateWithoutSourceDataInput!
    create: ResourceCreateWithoutSourceInput!
  }

  input ResourceWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    label: String
    label_not: String
    label_in: [String!]
    label_not_in: [String!]
    label_lt: String
    label_lte: String
    label_gt: String
    label_gte: String
    label_contains: String
    label_not_contains: String
    label_starts_with: String
    label_not_starts_with: String
    label_ends_with: String
    label_not_ends_with: String
    fhirType: String
    fhirType_not: String
    fhirType_in: [String!]
    fhirType_not_in: [String!]
    fhirType_lt: String
    fhirType_lte: String
    fhirType_gt: String
    fhirType_gte: String
    fhirType_contains: String
    fhirType_not_contains: String
    fhirType_starts_with: String
    fhirType_not_starts_with: String
    fhirType_ends_with: String
    fhirType_not_ends_with: String
    primaryKeyOwner: String
    primaryKeyOwner_not: String
    primaryKeyOwner_in: [String!]
    primaryKeyOwner_not_in: [String!]
    primaryKeyOwner_lt: String
    primaryKeyOwner_lte: String
    primaryKeyOwner_gt: String
    primaryKeyOwner_gte: String
    primaryKeyOwner_contains: String
    primaryKeyOwner_not_contains: String
    primaryKeyOwner_starts_with: String
    primaryKeyOwner_not_starts_with: String
    primaryKeyOwner_ends_with: String
    primaryKeyOwner_not_ends_with: String
    primaryKeyTable: String
    primaryKeyTable_not: String
    primaryKeyTable_in: [String!]
    primaryKeyTable_not_in: [String!]
    primaryKeyTable_lt: String
    primaryKeyTable_lte: String
    primaryKeyTable_gt: String
    primaryKeyTable_gte: String
    primaryKeyTable_contains: String
    primaryKeyTable_not_contains: String
    primaryKeyTable_starts_with: String
    primaryKeyTable_not_starts_with: String
    primaryKeyTable_ends_with: String
    primaryKeyTable_not_ends_with: String
    primaryKeyColumn: String
    primaryKeyColumn_not: String
    primaryKeyColumn_in: [String!]
    primaryKeyColumn_not_in: [String!]
    primaryKeyColumn_lt: String
    primaryKeyColumn_lte: String
    primaryKeyColumn_gt: String
    primaryKeyColumn_gte: String
    primaryKeyColumn_contains: String
    primaryKeyColumn_not_contains: String
    primaryKeyColumn_starts_with: String
    primaryKeyColumn_not_starts_with: String
    primaryKeyColumn_ends_with: String
    primaryKeyColumn_not_ends_with: String
    attributes_every: AttributeWhereInput
    attributes_some: AttributeWhereInput
    attributes_none: AttributeWhereInput
    source: SourceWhereInput
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    AND: [ResourceWhereInput!]
    OR: [ResourceWhereInput!]
    NOT: [ResourceWhereInput!]
  }

  input ResourceWhereUniqueInput {
    id: ID
  }

  enum Role {
    ADMIN
    USER
  }

  type Source {
    id: ID!
    name: String!
    hasOwner: Boolean!
    resources(
      where: ResourceWhereInput
      orderBy: ResourceOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Resource!]
    updatedAt: DateTime!
    createdAt: DateTime!
    credential: Credential
  }

  type SourceConnection {
    pageInfo: PageInfo!
    edges: [SourceEdge]!
    aggregate: AggregateSource!
  }

  input SourceCreateInput {
    id: ID
    name: String!
    hasOwner: Boolean
    resources: ResourceCreateManyWithoutSourceInput
    credential: CredentialCreateOneWithoutSourceInput
  }

  input SourceCreateOneWithoutCredentialInput {
    create: SourceCreateWithoutCredentialInput
    connect: SourceWhereUniqueInput
  }

  input SourceCreateOneWithoutResourcesInput {
    create: SourceCreateWithoutResourcesInput
    connect: SourceWhereUniqueInput
  }

  input SourceCreateWithoutCredentialInput {
    id: ID
    name: String!
    hasOwner: Boolean
    resources: ResourceCreateManyWithoutSourceInput
  }

  input SourceCreateWithoutResourcesInput {
    id: ID
    name: String!
    hasOwner: Boolean
    credential: CredentialCreateOneWithoutSourceInput
  }

  type SourceEdge {
    node: Source!
    cursor: String!
  }

  enum SourceOrderByInput {
    id_ASC
    id_DESC
    name_ASC
    name_DESC
    hasOwner_ASC
    hasOwner_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type SourcePreviousValues {
    id: ID!
    name: String!
    hasOwner: Boolean!
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type SourceSubscriptionPayload {
    mutation: MutationType!
    node: Source
    updatedFields: [String!]
    previousValues: SourcePreviousValues
  }

  input SourceSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: SourceWhereInput
    AND: [SourceSubscriptionWhereInput!]
    OR: [SourceSubscriptionWhereInput!]
    NOT: [SourceSubscriptionWhereInput!]
  }

  input SourceUpdateInput {
    name: String
    hasOwner: Boolean
    resources: ResourceUpdateManyWithoutSourceInput
    credential: CredentialUpdateOneWithoutSourceInput
  }

  input SourceUpdateManyMutationInput {
    name: String
    hasOwner: Boolean
  }

  input SourceUpdateOneRequiredWithoutCredentialInput {
    create: SourceCreateWithoutCredentialInput
    update: SourceUpdateWithoutCredentialDataInput
    upsert: SourceUpsertWithoutCredentialInput
    connect: SourceWhereUniqueInput
  }

  input SourceUpdateOneRequiredWithoutResourcesInput {
    create: SourceCreateWithoutResourcesInput
    update: SourceUpdateWithoutResourcesDataInput
    upsert: SourceUpsertWithoutResourcesInput
    connect: SourceWhereUniqueInput
  }

  input SourceUpdateWithoutCredentialDataInput {
    name: String
    hasOwner: Boolean
    resources: ResourceUpdateManyWithoutSourceInput
  }

  input SourceUpdateWithoutResourcesDataInput {
    name: String
    hasOwner: Boolean
    credential: CredentialUpdateOneWithoutSourceInput
  }

  input SourceUpsertWithoutCredentialInput {
    update: SourceUpdateWithoutCredentialDataInput!
    create: SourceCreateWithoutCredentialInput!
  }

  input SourceUpsertWithoutResourcesInput {
    update: SourceUpdateWithoutResourcesDataInput!
    create: SourceCreateWithoutResourcesInput!
  }

  input SourceWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    hasOwner: Boolean
    hasOwner_not: Boolean
    resources_every: ResourceWhereInput
    resources_some: ResourceWhereInput
    resources_none: ResourceWhereInput
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    credential: CredentialWhereInput
    AND: [SourceWhereInput!]
    OR: [SourceWhereInput!]
    NOT: [SourceWhereInput!]
  }

  input SourceWhereUniqueInput {
    id: ID
    name: String
  }

  type Subscription {
    attribute(
      where: AttributeSubscriptionWhereInput
    ): AttributeSubscriptionPayload
    credential(
      where: CredentialSubscriptionWhereInput
    ): CredentialSubscriptionPayload
    inputColumn(
      where: InputColumnSubscriptionWhereInput
    ): InputColumnSubscriptionPayload
    join(where: JoinSubscriptionWhereInput): JoinSubscriptionPayload
    resource(where: ResourceSubscriptionWhereInput): ResourceSubscriptionPayload
    source(where: SourceSubscriptionWhereInput): SourceSubscriptionPayload
    user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  }

  type User {
    id: ID!
    email: String!
    name: String!
    password: String!
    role: Role
    updatedAt: DateTime!
    createdAt: DateTime!
    credentials(
      where: CredentialWhereInput
      orderBy: CredentialOrderByInput
      skip: Int
      after: String
      before: String
      first: Int
      last: Int
    ): [Credential!]
  }

  type UserConnection {
    pageInfo: PageInfo!
    edges: [UserEdge]!
    aggregate: AggregateUser!
  }

  input UserCreateInput {
    id: ID
    email: String!
    name: String!
    password: String!
    role: Role
    credentials: CredentialCreateManyInput
  }

  type UserEdge {
    node: User!
    cursor: String!
  }

  enum UserOrderByInput {
    id_ASC
    id_DESC
    email_ASC
    email_DESC
    name_ASC
    name_DESC
    password_ASC
    password_DESC
    role_ASC
    role_DESC
    updatedAt_ASC
    updatedAt_DESC
    createdAt_ASC
    createdAt_DESC
  }

  type UserPreviousValues {
    id: ID!
    email: String!
    name: String!
    password: String!
    role: Role
    updatedAt: DateTime!
    createdAt: DateTime!
  }

  type UserSubscriptionPayload {
    mutation: MutationType!
    node: User
    updatedFields: [String!]
    previousValues: UserPreviousValues
  }

  input UserSubscriptionWhereInput {
    mutation_in: [MutationType!]
    updatedFields_contains: String
    updatedFields_contains_every: [String!]
    updatedFields_contains_some: [String!]
    node: UserWhereInput
    AND: [UserSubscriptionWhereInput!]
    OR: [UserSubscriptionWhereInput!]
    NOT: [UserSubscriptionWhereInput!]
  }

  input UserUpdateInput {
    email: String
    name: String
    password: String
    role: Role
    credentials: CredentialUpdateManyInput
  }

  input UserUpdateManyMutationInput {
    email: String
    name: String
    password: String
    role: Role
  }

  input UserWhereInput {
    id: ID
    id_not: ID
    id_in: [ID!]
    id_not_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_gt: ID
    id_gte: ID
    id_contains: ID
    id_not_contains: ID
    id_starts_with: ID
    id_not_starts_with: ID
    id_ends_with: ID
    id_not_ends_with: ID
    email: String
    email_not: String
    email_in: [String!]
    email_not_in: [String!]
    email_lt: String
    email_lte: String
    email_gt: String
    email_gte: String
    email_contains: String
    email_not_contains: String
    email_starts_with: String
    email_not_starts_with: String
    email_ends_with: String
    email_not_ends_with: String
    name: String
    name_not: String
    name_in: [String!]
    name_not_in: [String!]
    name_lt: String
    name_lte: String
    name_gt: String
    name_gte: String
    name_contains: String
    name_not_contains: String
    name_starts_with: String
    name_not_starts_with: String
    name_ends_with: String
    name_not_ends_with: String
    password: String
    password_not: String
    password_in: [String!]
    password_not_in: [String!]
    password_lt: String
    password_lte: String
    password_gt: String
    password_gte: String
    password_contains: String
    password_not_contains: String
    password_starts_with: String
    password_not_starts_with: String
    password_ends_with: String
    password_not_ends_with: String
    role: Role
    role_not: Role
    role_in: [Role!]
    role_not_in: [Role!]
    updatedAt: DateTime
    updatedAt_not: DateTime
    updatedAt_in: [DateTime!]
    updatedAt_not_in: [DateTime!]
    updatedAt_lt: DateTime
    updatedAt_lte: DateTime
    updatedAt_gt: DateTime
    updatedAt_gte: DateTime
    createdAt: DateTime
    createdAt_not: DateTime
    createdAt_in: [DateTime!]
    createdAt_not_in: [DateTime!]
    createdAt_lt: DateTime
    createdAt_lte: DateTime
    createdAt_gt: DateTime
    createdAt_gte: DateTime
    credentials_every: CredentialWhereInput
    credentials_some: CredentialWhereInput
    credentials_none: CredentialWhereInput
    AND: [UserWhereInput!]
    OR: [UserWhereInput!]
    NOT: [UserWhereInput!]
  }

  input UserWhereUniqueInput {
    id: ID
    email: String
  }
`;
